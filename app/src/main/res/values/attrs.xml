<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright 2020 Nicholas Hochstetler
  ~  You may not use this file except in compliance with the Apache License
  ~  Version 2.0, obtainable at http://www.apache.org/licenses/LICENSE-2.0
  ~  or in the file LICENSE in the project's root directory. -->

<resources>
    <!-- Used to indicate that a theme is a dark theme. -->
    <attr name="isDarkTheme"            format="boolean" />
    <!-- Used as the background color for recycler view items. -->
    <attr name="recyclerViewItemColor"  format="color" />
    <!-- Used as the background color of an item selected in a RecyclerView. -->
    <attr name="colorSelected"          format="color" />
    <!-- A text color. Used in some places instead of @android.attr.textColor
         due to dev.sasikanth.colorsheet.ColorSheet picking its background
         color based on the android attribute. -->
    <attr name="textColor"              format="color" />

    <!-- Where the cradle is drawn on the BottomAppBar. -->
    <declare-styleable name="BottomAppBar">
        <attr name="cradleAlignmentMode" format="enum" >
            <enum name="start"  value="0" />
            <enum name="center" value="1" />
            <enum name="end"    value="2" />
        </attr>
        <!-- The depth of the BottomAppBar cradle. -->
        <attr name="cradleDepth"              format="dimension" />
        <!-- The radius of the cradle curved top corners. -->
        <attr name="cradleTopCornerRadius"    format="dimension" />
        <!-- The radius of the cradle curved bottom corners. -->
        <attr name="cradleBottomCornerRadius" format="dimension" />
        <!-- The margin from the start or end of the BottomAppBar to the cradle. -->
        <attr name="cradleStartEndMargin"     format="dimension" />
        <!-- The margin in between the cradle and the cradle layout contents. -->
        <attr name="cradleContentsMargin"     format="dimension" />
        <!-- The background tint of the BottomAppBar. -->
        <attr name="backgroundTint"           format="color" />
        <!-- The initial width of the indicator. -->
        <attr name="indicatorWidth"           format="dimension" />
        <!-- The initial color of the indicator. -->
        <attr name="indicatorColor"           format="color" />
    </declare-styleable>

    <declare-styleable name="TextFieldEdit">
        <!-- Whether the TextFieldEdit will start in an editable state. -->
        <attr name="isEditable"   format="boolean" />
        <!-- The hint that will appear when the TextFieldEdit is editable. -->
        <attr name="editableHint" format="string" />
    </declare-styleable>

    <declare-styleable name="IntegerEdit">
        <!-- The initial value of the IntegerEdit. -->
        <attr name="initialValue" format="integer" />
        <!-- The minimum value the IntegerEdit can hold. -->
        <attr name="minValue"     format="integer" />
        <!-- The maximum value the IntegerEdit can hold. -->
        <attr name="maxValue"     format="integer" />
        <!-- The delay, in milliseconds, after which the IntegerEdit will update its LiveData member. -->
        <attr name="valueChangedNotificationTimeout" format="integer" />
        <!-- The step size of the increment and decrement buttons. -->
        <attr name="stepSize"     format="integer" />
        <!-- The text size of the IntegerEdit. -->
        <attr name="textSize"     format="dimension" />
    </declare-styleable>

    <declare-styleable name="GradientToolbar">
        <!-- The thickness of the optional border. -->
        <attr name="borderThickness" format="dimension" />
        <!-- Whether to draw the optional border on the top side, bottom side, both sides, or have no border. -->
        <attr name="borderMode"      format="enum">
            <enum name="top"       value="0"/>
            <enum name="bottom"    value="1"/>
            <enum name="topBottom" value="2"/>
            <enum name="none"      value="3"/>
        </attr>
    </declare-styleable>

    <!-- Due to the project's target API level of 21's inability to inflate custom
         drawables from XML, these attributes are never used, but are provided in
         case the target API level is ever increased to 24 or above. -->
    <declare-styleable name="GradientVectorDrawable">
        <!-- The string containing the path data to use for the button's icon. -->
        <attr name="pathData" format="string" />
        <!-- The intrinsic width of the icon. -->
        <attr name="width" format="dimension"/>
        <!-- The intrinsic height of the icon. -->
        <attr name="height" format="dimension"/>
        <!-- The width of the canvas the path is drawn on. -->
        <attr name="viewportWidth" format="float"/>
        <!-- The height of the canvas the path is drawn  on. -->
        <attr name="viewportHeight" format="float"/>
    </declare-styleable>
</resources>
