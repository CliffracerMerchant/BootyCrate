/* Copyright 2021 Nicholas Hochstetler
 * You may not use this file except in compliance with the Apache License
 * Version 2.0, obtainable at http://www.apache.org/licenses/LICENSE-2.0
 * or in the file LICENSE in the project's root directory. */

plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'com.google.android.gms.oss-licenses-plugin'
    id 'dagger.hilt.android.plugin'
}

android {
    namespace 'com.cliffracertech.bootycrate'
    compileSdkVersion 33
    buildToolsVersion "30.0.3"
    defaultConfig {
        applicationId 'com.cliffracertech.bootycrate'
        minSdkVersion 21
        targetSdkVersion 33
        versionCode 9
        versionName "1.1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        kapt {
            arguments { arg("room.schemaLocation", "$projectDir/schemas") }
        }
    }
    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            minifyEnabled false
            shrinkResources false
            debuggable true
        }
        release {
            debuggable false
            minifyEnabled true
            shrinkResources true
        }
    }
    buildFeatures {
        viewBinding true
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.4.3'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
        coreLibraryDesugaringEnabled true
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }

    testOptions.unitTests.includeAndroidResources = true

    packagingOptions.resources.excludes.add("META-INF/*")
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
        freeCompilerArgs += [
            '-opt-in=kotlin.RequiresOptIn',
            '-opt-in=kotlinx.coroutines.ExperimentalCoroutinesApi',
            '-opt-in=androidx.compose.ui.ExperimentalComposeUiApi',
            '-opt-in=androidx.compose.animation.ExperimentalAnimationApi',
            '-opt-in=androidx.compose.animation.graphics.ExperimentalAnimationGraphicsApi',
            '-opt-in=androidx.compose.material.ExperimentalMaterialApi',
            '-opt-in=androidx.compose.foundation.ExperimentalFoundationApi',
        ]
    }
}

kapt {
    correctErrorTypes true
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.datastore:datastore-core:1.0.0'
    implementation 'androidx.datastore:datastore-preferences:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.vectordrawable:vectordrawable:1.1.0'
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.6.0"
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation "androidx.lifecycle:lifecycle-common-java8:2.6.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.0"
    implementation 'androidx.preference:preference-ktx:1.2.0'
    implementation "androidx.activity:activity-ktx:1.6.1"
    implementation "androidx.fragment:fragment-ktx:1.5.5"
    implementation 'com.google.android.material:material:1.8.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4'
    implementation 'org.jetbrains.kotlinx:kotlinx-collections-immutable:0.3.5'

    implementation 'androidx.activity:activity-compose:1.6.1'
    implementation 'androidx.compose.material:material:1.3.1'
    implementation 'androidx.compose.material:material-icons-extended:1.3.1'
    implementation 'androidx.compose.animation:animation:1.3.3'
    implementation 'androidx.compose.ui:ui-tooling:1.3.3'
    implementation 'androidx.compose.ui:ui-util:1.3.3'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.6.0'
    implementation 'androidx.compose.animation:animation-graphics:1.3.3'
    implementation "com.google.accompanist:accompanist-systemuicontroller:0.17.0"

    implementation "androidx.room:room-runtime:2.5.0"
    implementation "androidx.room:room-ktx:2.5.0"
    kapt "androidx.room:room-compiler:2.5.0"

    implementation 'com.google.dagger:hilt-android:2.45'
    kapt 'com.google.dagger:hilt-compiler:2.45'

    implementation 'com.google.android.gms:play-services-oss-licenses:17.0.0'
    implementation 'ca.antonious:materialdaypicker:0.7.4'
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.8'

    testImplementation 'junit:junit:4.13.2'
    testImplementation 'androidx.test:core-ktx:1.5.0'
    testImplementation 'androidx.test.ext:junit-ktx:1.1.5'
    testImplementation "org.robolectric:robolectric:4.5.1"
    testImplementation 'androidx.test.ext:truth:1.5.0'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4'
    testImplementation 'com.google.dagger:hilt-android-testing:2.45'
    kaptTest 'com.google.dagger:hilt-compiler:2.45'

    androidTestImplementation 'androidx.test:core-ktx:1.5.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation 'androidx.test:rules:1.5.0'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.5.1'
    androidTestImplementation 'androidx.room:room-testing:2.5.0'
    androidTestImplementation 'androidx.arch.core:core-testing:2.2.0'
    androidTestImplementation 'androidx.test.ext:truth:1.5.0'
    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.5.1'
    androidTestImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4'
    androidTestImplementation 'com.google.dagger:hilt-android-testing:2.45'
    kaptAndroidTest 'com.google.dagger:hilt-compiler:2.45'
}

